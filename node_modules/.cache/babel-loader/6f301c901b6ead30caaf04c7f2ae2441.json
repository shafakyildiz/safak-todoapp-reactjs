{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\safak\\\\Desktop\\\\todo-app-reactjs-safak\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    // Update the react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    // Create item with an unique id.\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; // Copy the current list of items\n\n    const list = [...this.state.list]; // Add new item to the list\n\n    list.push(newItem); // Update the state with new list and reset newItem input\n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Add a todo.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a todo here...\",\n          value: this.state.newItem,\n          onChange: e => this.updateInput(\"newItem\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addItem(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.list.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [item.value, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.deleteItem(item.id),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 28\n              }, this), \">\"]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/safak/Desktop/todo-app-reactjs-safak/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","e","target","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;AAGA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAE1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAX;AAID;;AAIHC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAY;AACrB;AACA,SAAKC,QAAL,CAAc;AACZ,OAACF,GAAD,GAAMC;AADM,KAAd;AAED;;AAEDE,EAAAA,OAAO,GAAE;AACP;AAEA,UAAMN,OAAO,GAAG;AACdO,MAAAA,EAAE,EAAE,IAAGC,IAAI,CAACC,MAAL,EADO;AAEdL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBU,KAAnB;AAFO,KAAhB,CAHO,CAQP;;AACA,UAAMT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CATO,CAYP;;AAEAA,IAAAA,IAAI,CAACU,IAAL,CAAUX,OAAV,EAdO,CAgBP;;AAGA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAC;AAFI,KAAd;AAKD;;AAEDY,EAAAA,UAAU,CAACL,EAAD,EAAI;AAEZ,UAAMN,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb;AAEA,UAAMY,WAAW,GAAGZ,IAAI,CAACa,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAhC,CAApB;AAEA,SAAKF,QAAL,CAAc;AAACJ,MAAAA,IAAI,EAAEY;AAAP,KAAd;AACD;;AAGDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,+CAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,IAAI,EAAC,MAAZ;AACA,UAAA,WAAW,EAAC,qBADZ;AAEA,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,OAFlB;AAGA,UAAA,QAAQ,EAAEiB,CAAC,IAAI,KAAKf,WAAL,CAAiB,SAAjB,EAA4Be,CAAC,CAACC,MAAF,CAASd,KAArC;AAHf;AAAA;AAAA;AAAA;AAAA,gBAHF,eAQE;AACA,UAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eAUE;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE;AAAA,oBACG,KAAKP,KAAL,CAAWE,IAAX,CAAgBkB,GAAhB,CAAoBJ,IAAI,IAAI;AAC3B,gCACE;AAAA,yBACCA,IAAI,CAACX,KADN,oBACa;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKQ,UAAL,CAAgBG,IAAI,CAACR,EAArB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADb;AAAA,eAASQ,IAAI,CAACR,EAAd;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD,WANA;AADH;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAyBC;;AAjFyB;;AAqF5B,eAAeX,GAAf","sourcesContent":["import React, {Component} from 'react';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list: []\n    }\n  }\n\n\n\nupdateInput(key, value){\n  // Update the react state\n  this.setState({\n    [key]:value  })\n}\n\naddItem(){\n  // Create item with an unique id.\n\n  const newItem = {\n    id: 1+ Math.random(),\n    value: this.state.newItem.slice()\n  };\n\n  // Copy the current list of items\n  const list = [...this.state.list];\n\n\n  // Add new item to the list\n\n  list.push(newItem);\n\n  // Update the state with new list and reset newItem input\n\n\n  this.setState({\n    list,\n    newItem:\"\"\n\n  });\n}\n\ndeleteItem(id){\n\n  const list = [...this.state.list];\n\n  const updatedList = list.filter(item => item.id !== id);\n\n  this.setState({list: updatedList});\n}\n\n\nrender() {\n  return (\n    <div className=\"App\">\n      <div>\n        Add a todo.\n        <br/>\n        <input type=\"text\"\n        placeholder=\"Type a todo here...\"\n        value={this.state.newItem}\n        onChange={e => this.updateInput(\"newItem\", e.target.value)}/>\n\n        <button\n        onClick={() => this.addItem()}>Add</button>\n        <br/>\n        <ul>\n          {this.state.list.map(item => {\n            return(\n              <li key={item.id}>\n              {item.value} <button onClick={() => this.deleteItem(item.id)}>X</button>>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}